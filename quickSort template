#include<iostream>
#include<string>
#include<algorithm>
#include<numeric>
#include<vector>
#include<iterator>
#include<unordered_map>
#include<queue>
using namespace std;       //O(m+n)
namespace aa
{
	template<typename T>
	void quickSort(T* a, int left, int right)
	{
		if (left >= right) return;
		int leftP = left,
			rightP = right + 1,
			center = a[leftP];
		while (true)
		{
			do
			{
				++leftP;
			} while (a[leftP] < center);
			do
			{
				--rightP;
			} while (a[rightP] > center);
			if (leftP >= rightP) break;
			swap(a[leftP], a[rightP]);
		}
		swap(a[left], a[rightP]);
		quickSort(a, left, rightP - 1);
		quickSort(a, rightP + 1, right);
	}
}
int main(int argc, char* argv)
{
	using namespace aa;
	int* a = new int[5]{ 4,5,2,3,1 };
	quickSort(a, 0, 4);
	copy(a, a + 5, ostream_iterator<int>(cout, " "));
	return 0;
}
